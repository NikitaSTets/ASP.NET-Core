@using ASP.NET_Core_Check.Controllers
@model ASP.NET_Core_Check.Models.AccountLoginViewModel
@{
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-4">
        <section>
            @using (Html.BeginForm(nameof(AccountController.PerformLogin), "Account", new { returnUrl = Model.ReturnUrl }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBox(nameof(Model.Email))
                    <span asp-validation-for=" Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password)
                    @Html.TextBox(nameof(Model.Password))
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        @Html.LabelFor(m => m.RememberMe)
                        @Html.CheckBoxFor(m => m.RememberMe)
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Log in</button>
                </div>
            }
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    @using (Html.BeginForm(nameof(ExternalAccountController.ExternalLogin), "ExternalAccount", new { returnUrl = Model.ReturnUrl }, FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    }
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
